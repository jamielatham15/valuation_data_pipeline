name: Docker Image CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v2.4.2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: '${{ secrets.AWS_ACCESS_KEY }}'
          aws-secret-access-key: '${{ secrets.AWS_SECRET_KEY }}'
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: '${{ steps.login-ecr.outputs.registry }}'
          ECR_REPOSITORY: "app_container_registry"
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
          -f ./projects/valuation_pipeline/Dockerfile . \
          --build-arg '${{ secrets.DATA_HOST }}' \
          --build-arg '${{ secrets.DATA_USER }}' \
          --build-arg '${{ secrets.DATA_PASSWORD }}' \
          --build-arg '${{ secrets.AWS_ACCESS_KEY }}' \
          --build-arg '${{ secrets.AWS_SECRET_KEY }}' \
          --build-arg '${{ secrets.AWS_BUCKET_NAME }}' \
          --build-arg '${{ secrets.AWS_ACCOUNT_ID }}' \
          --build-arg '${{ secrets.AWS_RDS_PASSWORD }}' \
          --build-arg '${{ secrets.AWS_RDS_USER }}' \
          --build-arg '${{ secrets.AWS_RDS_HOST }}'
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG